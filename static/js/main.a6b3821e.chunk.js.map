{"version":3,"sources":["components/layout/Header.jsx","selectors/index.js","services/api.js","actions/index.js","constants/ActionTypes.js","components/layout/Banner.jsx","containers/Banner.container.js","components/pets/PetCard.jsx","components/pets/PetCardGroup.jsx","containers/PetCardGroup.container.js","components/pets/PetDetail.jsx","containers/PetDetail.container.js","components/layout/NotFoundPage.jsx","components/layout/Footer.jsx","App.js","serviceWorker.js","reducers/layout.js","reducers/index.js","reducers/pets.js","index.js"],"names":["Header","className","href","data-blast","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","aria-pressed","getActivePets","createSelector","state","activePets","getBanners","layout","banners","getSelectedPet","selectedPet","API_BASE_URL","process","REACT_APP_API_BASE_URL","API","this","url","axios","get","params","endpoint","queryset","join","petSlug","Api","fetchActivePets","dispatch","then","res","payload","data","fetchBanners","results","fetchPetDetail","getPetDetail","bannerStyle","background","Banner","actions","useEffect","slice","map","banner","key","slug","style","picture","title","subtitle","buttonOne","buttonOneLink","buttonTwo","buttonTwoLink","markup","text","link","second","role","addButtons","BannerList","connect","bindActionCreators","Actions","API_CROP_URL","REACT_APP_API_CROP_URL","cardBodyStyle","minHeight","PetCard","src","description","date","alt","aria-hidden","to","PetCardGroup","pets","pet","mainPicture","name","announcements","find","a","active","dateAdded","ActivePetList","PetActions","PetDetail","useParams","useState","setPet","handleError","err","console","log","handleSuccess","catch","PetDetailComponent","NotFoundPage","Fragment","rel","Footer","App","exact","path","component","Boolean","window","location","hostname","match","action","rootReducer","combineReducers","persistConfig","storage","persistedReducer","persistReducer","reducer","store","applyMiddleware","thunk","createStore","persistor","persistStore","ReactDOM","render","loading","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a6b3821e.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Header = () => {\n    return (\n        <header>\n            <nav className=\"navbar navbar-expand-lg navbar-light fixed-top navbar-expand-lg navbar-light navbar-fixed-top\">\n                <h1>\n                    <a className=\"navbar-brand\" href=\"/\" data-blast=\"color\">\n                        PetLost\n                    </a>\n                </h1>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n                    aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav mx-lg-auto text-center\">\n                        <li className=\"nav-item active\">\n                            <a className=\"nav-link\" href=\"index.html\" data-blast=\"color\">Home\n                                <span className=\"sr-only\">(current)</span>\n                            </a>\n                        </li>\n                        <li className=\"nav-item  mt-lg-0 mt-3\">\n                            <a className=\"nav-link scroll\" href=\"#lost\">Desaparecidos</a>\n                        </li>\n                        <li className=\"nav-item mt-lg-0 mt-3\">\n                            <a className=\"nav-link scroll\" href=\"#found\">Encontrados</a>\n                        </li>\n                        <li className=\"nav-item  mt-lg-0 mt-3\">\n                            <a className=\"nav-link scroll\" href=\"#announce\">Anuncie gr√°tis</a>\n                        </li>\n                    </ul>\n                    <button type=\"button\" className=\"btn  wthree-link-bnr bg-theme rounded-circle text-center mt-lg-0 mt-3\" data-toggle=\"modal\"\n                        aria-pressed=\"false\" data-target=\"#exampleModal\" data-blast=\"bgColor\"> <span className=\"fa fa-user text-white\"></span>\n                    </button>\n                </div>\n\n            </nav>\n        </header>\n    )\n}\n\n\nexport default Header","import { createSelector } from 'reselect'\n\n\nconst activePets = state => state.activePets\nexport const getActivePets = createSelector(\n    activePets,\n    activePets => activePets\n)\n\n\nconst banners = state => state.layout.banners\nexport const getBanners = createSelector(\n    banners,\n    banners => banners\n)\n\n\nconst selectedPet = state => state.selectedPet\nexport const getSelectedPet = createSelector(\n    selectedPet,\n    selectedPet => selectedPet\n)\n","import axios from 'axios'\n\n\nconst API_BASE_URL =\n    process.env.REACT_APP_API_BASE_URL || 'https://gui-pets.herokuapp.com/api'\n\n\nclass API {\n    constructor() {\n        this.url = API_BASE_URL\n    }\n\n    getActivePets() {\n        return axios.get(`${this.url}/pets/?active=true`)\n    }\n\n    getInactivePets() {\n        return axios.get(`${this.url}/pets/?active=false`)\n    }\n\n    getLostPets() {\n        return axios.get(`${this.url}/pets/?situation=lost`)\n    }\n\n    getFoundPets() {\n        return axios.get(`${this.url}/pets/?situation=found`)\n    }\n\n    getRawQuery(params, endpoint = 'pets') {\n        const queryset = params.join('&')\n        return axios.get(`${this.url}/${endpoint}/?${queryset}`)\n    }\n\n    getBanners() {\n        return axios.get(`${this.url}/banners/`)\n    }\n\n    getPetDetail(petSlug) {\n        return axios.get(`${this.url}/pets/${petSlug}`)\n    }\n}\n\n\nexport default API\n","import * as types from '../constants/ActionTypes'\nimport API from '../services/api'\n\n\nconst Api = new API()\n\n\nexport const fetchActivePets = () => {\n    return dispatch => {\n        Api.getActivePets()\n            .then(res => dispatch({\n                type: types.FETCH_ACTIVE_PETS,\n                payload: res.data,\n            }))\n    }\n}\n\nexport const fetchBanners = () => {\n    return dispatch => {\n        Api.getBanners()\n            .then(res => dispatch({\n                type: types.FETCH_BANNERS,\n                payload: res.data.results,\n            }))\n    }\n}\n\nexport const fetchPetDetail = petSlug => {\n    return dispatch => {\n        Api.getPetDetail(petSlug)\n            .then(res => dispatch({\n                type: types.FETCH_PET_DETAIL,\n                payload: res.data,\n            }))\n    }\n}\n","export const FETCH_ACTIVE_PETS = 'FETCH_ACTIVE_PETS'\nexport const FETCH_PET_DETAIL = 'FETCH_PET_DETAIL'\nexport const FETCH_BANNERS = 'FETCH_BANNERS'\n","import React, { useEffect } from 'react'\n\n\nconst Banner = ({ banners, actions }) => {\n\n    useEffect(() => {\n        actions.fetchBanners()\n    }, [actions])\n\n    const addButtons = banner => {\n        const { buttonOne, buttonOneLink, buttonTwo, buttonTwoLink } = banner\n\n        let markup = (text, link, second) => {\n            if (!text) return ''\n            let className = \"btn bg-theme mt-4 w3_pvt-link-bnr scroll\"\n            if (second) className += \" ml-4\"\n            return (\n                <a key={link} className={className}\n                    data-blast=\"bgColor\"\n                    href={link}\n                    role=\"button\">{text}\n                </a>\n            )\n        }\n        return [markup(buttonOne, buttonOneLink), markup(buttonTwo, buttonTwoLink, true)]\n\n    }\n\n    return (\n        <div className=\"callbacks_container\">\n            <ul className=\"rslides\">\n                {banners.slice(0, 1).map(banner =>\n                    <li className=\"banner\" key={banner.slug} style={bannerStyle(banner.picture)}>\n                        <div className=\"container\">\n                            <div className=\"banner-text\">\n                                <div className=\"slider-info\">\n                                    <h3>{banner.title}</h3>\n                                    <span className=\"line\"></span>\n                                    <p>{banner.subtitle}</p>\n                                    {addButtons(banner)}\n                                </div>\n                            </div>\n                        </div>\n                    </li>\n                )}\n            </ul>\n        </div>\n    )\n}\n\nconst bannerStyle = url => ({\n    background: `url(${url}) center no-repeat`\n})\n\nexport default Banner\n","import { getBanners } from '../selectors'\nimport { bindActionCreators } from 'redux'\nimport * as Actions from '../actions'\nimport { connect } from 'react-redux'\nimport Banner from '../components/layout/Banner'\n\n\nconst mapStateToProps = state => ({\n    banners: getBanners(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n    actions: bindActionCreators(Actions, dispatch)\n})\n\nconst BannerList = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Banner)\n\n\nexport default BannerList\n","import React from 'react'\n\nimport { Link } from \"react-router-dom\"\n\nconst API_CROP_URL =\n    process.env.REACT_APP_API_CROP_URL || 'https://gui-bloodborne-nginx.herokuapp.com/api/smartcrop/download'\n\nconst CROP_MAX_WIDTH = 256\nconst CROP_MAX_HEIGHT = 256\n\n\nconst PetCard = ({ src, title, description, date, link }) => {\n\n    return (\n\n        <div className=\"col-lg-4 col-md-6 mt-sm-0 mt-4 mb-4\">\n            <div className=\"card\">\n                <div className=\"card-header p-0 position-relative\">\n                    <a href={link} data-toggle=\"modal\" aria-pressed=\"false\" data-target={link}\n                        role=\"button\">\n                        <img className=\"card-img-bottom\"\n                            src={`${API_CROP_URL}/?url=${src}&width=${CROP_MAX_WIDTH}&height=${CROP_MAX_HEIGHT}`} alt={title} />\n                        <span className=\"fa fa-user post-icon bg-theme\" aria-hidden=\"true\" data-blast=\"bgColor\"></span>\n\n                    </a>\n                </div>\n                <div className=\"card-body\" style={cardBodyStyle}>\n                    <h5 className=\"blog-title card-title font-weight-bold\">\n                        <a href={link} data-toggle=\"modal\" aria-pressed=\"false\" data-target={link}\n                            role=\"button\">{title}</a>\n                    </h5>\n                    <p>{description}</p>\n                    <label className=\"mt-2\"> <span className=\"fa fa-calendar mr-3\"></span>{date}</label>\n                    <Link className=\"btn blog-btn wthree-bnr-btn\" to={link}>Mais Detalhes</Link>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\n\nconst cardBodyStyle = {\n    minHeight: '250px'\n}\n\n\nexport default PetCard\n","import React, { useEffect } from 'react'\nimport PetCard from './PetCard'\n\n\nconst PetCardGroup = ({ activePets, actions }) => {\n    useEffect(() => {\n        actions.fetchActivePets()\n    }, [actions])\n\n    const pets = activePets.results || []\n\n    return (\n        <section className=\"blog_w3ls pb-lg-5 pb-4\" id=\"posts\">\n            <div className=\"container py-sm-5 py-4\">\n                <div className=\"title-desc text-center pb-sm-3 mb-lg-5\">\n                    <h3 className=\"main-title-w3pvt\">Ajude estes animais</h3>\n                    <p>A encontrarem suas fam√≠lias.</p>\n                </div>\n                <div className=\"row mt-4\">\n\n                    {pets.map(pet =>\n                        <PetCard\n                            key={pet.id}\n                            src={pet.mainPicture.url}\n                            title={pet.name}\n                            description={pet.description}\n                            date={pet.announcements.find(a => a.active === true).dateAdded}\n                            link={`/pets/${pet.slug}/`}\n                        />\n                    )}\n\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default PetCardGroup","import { getActivePets } from '../selectors'\nimport { bindActionCreators } from 'redux'\nimport * as PetActions from '../actions'\nimport { connect } from 'react-redux'\nimport PetCardGroup from '../components/pets/PetCardGroup'\n\n\nconst mapStateToProps = state => ({\n    activePets: getActivePets(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n    actions: bindActionCreators(PetActions, dispatch)\n})\n\nconst ActivePetList = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PetCardGroup)\n\n\nexport default ActivePetList\n","import React, { useEffect, useState } from 'react'\n\nimport API from '../../services/api'\n\nimport { useParams } from 'react-router-dom'\n\nconst Api = new API()\n\nconst PetDetail = ({ actions }) => {\n    const { slug } = useParams()\n    const [pet, setPet] = useState('false')\n\n    const handleError = err => console.log(err)\n    const handleSuccess = res => {\n        setPet(res.data)\n    }\n    console.log('caiu aqui')\n\n    useEffect(() => {\n        Api.getPetDetail(slug)\n            .then(handleSuccess)\n            .catch(handleError)\n    }, [slug])\n\n    return (\n        <div>{pet.name}</div>\n    )\n}\n\n\nexport default PetDetail\n","import { getSelectedPet } from '../selectors'\nimport { bindActionCreators } from 'redux'\nimport * as PetActions from '../actions'\nimport { connect } from 'react-redux'\nimport { default as PetDetailComponent } from '../components/pets/PetDetail'\n\n\nconst mapStateToProps = state => ({\n    selectedPet: getSelectedPet(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n    actions: bindActionCreators(PetActions, dispatch)\n})\n\n\nconst PetDetail = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(PetDetailComponent)\n\n\nexport default PetDetail\n","import React from 'react'\n\n\nconst NotFoundPage = () => (\n    <React.Fragment>\n        <link href=\"https://fonts.googleapis.com/css?family=Quicksand:700\" rel=\"stylesheet\" />\n        <link type=\"text/css\" rel=\"stylesheet\" href=\"https://gui-pets.s3.amazonaws.com/static/web/css/404.css\" />\n        <div id=\"notfound\">\n            <div className=\"notfound\">\n                <div className=\"notfound-bg\">\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                </div>\n                <h1>oops!</h1>\n                <h2>Erro 404 : P√°gina n√£o encontrada</h2>\n                <a href=\"/\">voltar</a>\n            </div>\n        </div>\n    </React.Fragment>\n)\n\n\nexport default NotFoundPage\n","import React from 'react'\n\n\nconst Footer = () =>\n    <React.Fragment>\n        <footer className=\"cpy-custom-right bg-custom-dark\" data-blast=\"bgColor\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-6 text-lg-right mt-lg-0 mt-4\">\n                        <h3 className=\"w3pvt-title\">Sobre a PetLost</h3>\n                        <p className=\"text-secondary mt-2\">Queremos ajudar os animais a encontrarem suas fam√≠lias.</p>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-lg-6 text-lg-right mt-lg-0 mt-4\">\n                        <p className=\"text-white\">desenvolvido por\n                            <a className=\"text-custom-theme\" href=\"https://github.com/Guilehm\"> guilherme luis.</a>\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </footer>\n    </React.Fragment>\n\n\nexport default Footer\n","import React from 'react'\nimport './App.css'\n\nimport Header from './components/layout/Header'\nimport Banner from './containers/Banner.container'\nimport RandomGallery from './components/layout/RandomGallery'\nimport PetList from './containers/PetCardGroup.container'\nimport PetDetail from './containers/PetDetail.container'\nimport NotFoundPage from './components/layout/NotFoundPage'\nimport Footer from './components/layout/Footer'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\"\n\nconst App = () => (\n    <Router>\n        <div className=\"App\">\n            <Switch>\n                <Route exact path=\"/pets/:slug\">\n                    <PetDetail />\n                </Route>\n                <Route exact path=\"/\">\n                    <Header />\n                    <Banner />\n                    <PetList />\n                    {/* <RandomGallery /> */}\n                    <Footer />\n                </Route>\n                <Route path='*' exact={true} component={NotFoundPage} />\n            </Switch>\n        </div>\n    </Router>\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    FETCH_BANNERS,\n} from '../constants/ActionTypes'\n\n\nconst banners = (state = [], action) => {\n    switch (action.type) {\n        case FETCH_BANNERS:\n            return { banners: action.payload }\n        default:\n            return state\n    }\n}\n\n\nexport default banners","import { activePets, selectedPet } from './pets'\nimport layout from './layout'\nimport { combineReducers } from 'redux'\n\n\nconst rootReducer = combineReducers({\n    activePets,\n    selectedPet,\n    layout,\n})\n\n\nexport default rootReducer\n","import {\n    FETCH_ACTIVE_PETS,\n    FETCH_PET_DETAIL,\n} from '../constants/ActionTypes'\n\n\nexport const activePets = (state = [], action) => {\n    switch (action.type) {\n        case FETCH_ACTIVE_PETS:\n            return { ...action.payload }\n        default:\n            return state\n    }\n}\n\n\nexport const selectedPet = (state = [], action) => {\n    switch (action.type) {\n        case FETCH_PET_DETAIL:\n            return { ...action.payload }\n        default:\n            return state\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport storage from 'redux-persist/lib/storage'\nimport { persistReducer, persistStore } from 'redux-persist'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport reducer from './reducers'\n\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n}\nconst persistedReducer = persistReducer(persistConfig, reducer)\nconst store = applyMiddleware(thunk)(createStore)(persistedReducer)\nconst persistor = persistStore(store)\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <App />\n        </PersistGate>\n    </Provider>,\n    document.getElementById('root')\n)\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}